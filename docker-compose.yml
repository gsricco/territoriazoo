version: '3'

services:
  db:
    container_name: db
    image: postgres:14-alpine
    ports:
      - '5433:5432'
    env_file:
      - ZOO/.db_env
    volumes:
      - pgdata:/var/lib/postgresql/data
  backend:
    container_name: backend
    restart: unless-stopped
    build:
      context: ./ZOO
    env_file:
      - ZOO/.env
    ports:
      - "8080:8000"
#    expose:
#      - "8000"
    depends_on:
      - db
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
  frontend:
    container_name: frontend
    build:
      context: ./itec_project
    volumes:
      - react_build:/react/build
    depends_on:
      - backend
#  nginx:
##    image: nginx:1.23-alpine
#    build :
#      context: ./itec_project
#      dockerfile: Dockerfile
#    container_name: nginx
#    restart: unless-stopped
#    ports:
#      - "8080:80"
#    volumes:
#      - ./itec_project/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#      - react_build:/react/build
#      - static_volume:/app/staticfiles
#      - media_volume:/app/mediafiles
#    depends_on:
#      - backend
##      - frontend
  redis:
    container_name: redis
    image: redis:6.0.16-alpine
    restart: unless-stopped
    volumes:
      - redis_volume:/data/
volumes:
  react_build:
  redis_volume:
  pgdata:
  static_volume:
  media_volume: